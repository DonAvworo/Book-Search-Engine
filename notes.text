Project Notes
===============================================================================

what is a mutation in java script?

A mutation is a change in the source code of a program. It is a change that is
introduced by a developer to the source code of a program. The mutation is
introduced to test the ability of the test suite to detect the change. If the
test suite is able to detect the change, then the test suite is said to be
able to detect the mutation. If the test suite is not able to detect the
change, then the test suite is said to be unable to detect the mutation.

code example of mutation in java scripts

public class MutantExample {
    public static void main(String[] args) {  
        int x = 0;
        int y = 0;
        if (x == 0) {
            y = 1;
        }
        System.out.println("y = " + y);
    }
}






to install apollo-server-express and graphql as dependencies, 
and apollo-server-testing as a dev dependency use the following command:

TODO: add the command
npm install apollo-server-express graphql apollo-server-testing

apollo client setup

To install apollo client and graphql as dependencies use the following command:
TODO add the command    
npm install apollo-boost graphql or 
yarn add apollo-boost graphql or 
pnpm add apollo-boost graphql

================================================================================================
message from terminal after running npm run develop
================================================================================================

1 | Error: ENOENT: no such file or directory, stat '/Users/donavworo/manchester-u-bootcamp/Book-Search-Engine/client/build/index.html'
    TO FIX THIS ERROR:
    1. Go to the client folder
    2. Run npm run build
    3. Run npm run develop
    4. Go to localhost:3001 in your browser
    5. You should see the app running
    6. If you don't see the app running, try running npm run develop again
    7. If you still don't see the app running, try running npm run build again
    8. If you still don't see the app running, try running npm run develop again
================================================================================================
2 |
To fix the dependency tree, try following the steps below in the exact order:
 
   1. Delete package-lock.json (not package.json!) and/or yarn.lock in your project folder.
   2. Delete node_modules in your project folder.
   3. Remove "babel-jest" from dependencies and/or devDependencies in the package.json file in your project folder.
   4. Run npm install or yarn, depending on the package manager you use.
 
 In most cases, this should be enough to fix the problem.
 If this has not helped, there are a few other things you can try:
 
   5. If you used npm, install yarn (http://yarnpkg.com/) and repeat the above steps with it instead.
      This may help because npm has known issues with package hoisting which may get resolved in future versions.
 
   6. Check if /Users/donavworo/manchester-u-bootcamp/Book-Search-Engine/node_modules/babel-jest is outside your project directory.
      For example, you might have accidentally installed something in your home folder.
 
   7. Try running npm ls babel-jest in your project folder.
      This will tell you which other package (apart from the expected react-scripts) installed babel-jest.
 
 If nothing else helps, add SKIP_PREFLIGHT_CHECK=true to an .env file in your project.
 That would permanently disable this preflight check in case you want to proceed anyway.
 





 